.. _running_the_examples:

Running the Examples
--------------------

The GEMmaker example run will run a small set of local files (downloaded when
you cloned GEMmaker) and a remote file (automatically downloaded from `NCBI's
SRA repository <https://www.ncbi.nlm.nih.gov/sra>`__.) This demonstrates how
GEMmaker handles local and remote files.

This data set is very small so it can be run on a desktop machine in a short
amount of time. GEMmaker must be cloned to your machine, and it's
:ref:`software_prerequisites` must be installed before running these examples.

Executing the examples (what you came here for)
===============================================

Once the :ref:`software_prerequisites` are installed, you can run
GEMmaker with the example data. If you have not already, you must rename the
**nextflow.config.example** file as **nextflow.config**:

.. code:: bash

    mv nextflow.config.example nextflow.config

The nextflow.config.example is already configured with the proper
settings to run the samples described above. To execute the
workflow run the following:

.. code:: bash

    nextflow run main.nf -profile standard,inDocker
 
You should see an output that looks like this: :ref:`example_output`


Explination of the run
~~~~~~~~~~~~~~~~~~~~~~

This example uses the imaginary organism "Cool Organism" (CORG). For the local
example, we use a set of 3 artificially made RNA-seq runs made for CORG. CORG has a very
small "genome" of only 2,336 nucleotides, 3 "chromosomes" and 6 "genes".
The 6 genes are named "gene\_Alpha", "gene\_Beta", "gene\_Zeta", "gene\_Gamma",
"gene\_Delta", "gene\_Epsilon".

For the remote example, GEMmaker automatically downloaded a very
small RNA-seq file from NCBI. This dataset is from an uncharacterized bacteria,
but luckly, CORG shares 3 of the genes with this bacteria so we could use CORG's
reference file (pretend that the remote file is also for CORG, we are just using
it becasue it is an unussually small file, which makes it ideal as an example).

This ran Hisat2. If you would like to run Salmon or Kallisto, please read on.

Running Salmon or Kallisto on the example dataset
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First, you must edit the ``nextflow.config`` file to say that you want to run the
example using Salmon or Kallisto.

In the GEMmaker directiry, edit the ``nextflow.config`` file using your favorite
editor (here we use the `vim <https://www.vim.org/>` editor on the command line,
but you can edit it using a gui based editor if you like. It just needs to be
able to edit a text file)

..code::bash

  vim nextflow.config

Then edit the Alignment section of the file. Change to 1 for Kallisto, and 2 for
salmon

Here is what it should look like to run the example with Kallisto

..code::bash

      /**
     * Alignment
     *
     * User chooses between hisat2, Kallisto or Salmon. If hisat2 is chosen,
     * processes "samtools_sort", "samtools_index" and "stringtie" will also be
     * done. All processes will end with a gene abundance file.
     * Aligns reads to the reference genome.
     */
    alignment {
      //
      // hisat2 = 0
      // Kallisto = 1
      // Salmon = 2
      //
      which_alignment = 1
    }

After that, save your file and run the worklow:

.. code:: bash

    nextflow run main.nf -profile standard,inDocker

Inputs explained
~~~~~~~~~~~~~~~~
The inputs for the example run are in the Reference directory and the 2 data
directories in the examples directory.

Reference directory
===================

The reference directory for the example is located at:

.. code:: bash

    GEMmaker/examples/reference

This directory contains the

- made up reference genome file (**CORG.fna**),
- `GTF <https://uswest.ensembl.org/info/website/upload/gff.html>`__ file (**CORG.gtf**)
- hisat index files (**CORG.?/ht2**).
- kallisto index file (**CORG.transcripts.Kallisto.indexed**)
- salmon index directory (**CORG.transcripts.Salmon.indexed/**)
- **COMMANDS.sh** explaining how each of these were generated

These are the files needed to run hisat2, kallisto, and salmon on the CORG data.

Data directory
==============

There are 2 sample data directories:

For local runs:

.. code:: bash

  /GEMmaker/examples/LocalRunExample/Data/

For remote runs:

.. code:: bash
  /GEMmaker/examples/RemoteRunExample/

The Local runs directory contains 3 `FASTQ
<https://en.wikipedia.org/wiki/FASTQ_format>`__ files for CORG containing
RNA-seq data. These are examples of local unpaired data, and are each in a directory
of their own. The file naming format for these reads is "?\_1.fastq" where the "?"
is the number of the sample. GEM-maker finds these files through the glob
pattern assigned to the "local\_samples\_path" in the **nextflow.config** file.

The Remote runs directory contains the file ``SRA_IDs.txt`` which contains the
name of the remote file to be downloaded by GEMmaker from `NCBI's SRA repository
<https://www.ncbi.nlm.nih.gov/sra>`__. In a real run, this would probably contain
more than just one sra name, with each run being on a new line.


Outputs explained
~~~~~~~~~~~~~~~~~
Results
=======

Once executed, the example should output a directory title ``output`` with 6 directories in it.
Four of the directories correspond to each the samples run (3 local, 1 remote). Each
of these contains the files generated for each of these samples.

In each output directory you will find the following files:

- **fastq** The fastq reads file for the experiment.
- **fastqc** 6 or 12 files (depending on paired or unpaired data)
  from fastqc. Fastqc is set up tocheck files before and after trimmomatic.
- **sam** alignment file.
- **bam** binary alignment file.
- **ga** expression level transcript abundance.
- **fpkm** 2 column version of **ga** file with only gene and FPKM value.
- **tpm** 2 column version of the **ga** file with only gene and TPM values.






The remaining 2 directories are the ``reports`` directory and the ``GEM``
directory. The ``reports`` directory will contain a ``multiqc_report.html`` file
that reports on different statistics about the run.

.. figure:: /images/MultiQC_Report.png
  :alt: MultiQC_Report

Figure 1: Image of the start of the report for the example run when run with Hisat2.

The ``GEM`` directory contains the final GEM matrix, in raw, TPM and FPKM form.
These can be used for further analysis.


The output of GEM-maker can be used for several different analysis. The
FPKM files can be combined into an expression matrix and then visualized
using a heatmap. The following heatmap is the Local Example's fpkm
values divided by 1000 in heatmap form. We can see that gene\_Zeta
remained constant across all three samples, gene\_Beta decreased, and
gene\_Alpha increased.

.. figure:: /images/heatmap.png
   :alt: heatmap

   heatmap
